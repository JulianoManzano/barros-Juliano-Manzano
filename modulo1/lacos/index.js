/*1. O que o c√≥digo abaixo est√° fazendo? Qual o resultado impresso no console?
    
    let valor = 0
     for(let i = 0; i < 5; i++) {
          valor += i
        }
        console.log(valor)

---------------------------------------------RESPOSTA-----------------------------------------------------------
Vai imprimir no console o n√∫mero 10, pois esta incremetando a soma de i em cada repeti√ß√£o at√© i ser menor que 5.


  2. Leia o c√≥digo abaixo:
       
        const lista = [10, 11, 12, 15, 18, 19, 21, 23, 25, 27, 30]
        for (let numero of lista) {
          if (numero > 18) {
        		console.log(numero)
        	}
        }        

    a) O que vai ser impresso no console?
----------------------------------------------RESPOSTA----------------------------------------------------------
Vai ser impresso no console n√∫meros maiores que 18 do array lista.

    b) Se eu quisesse acessar o **√≠ndice** de cada elemento dessa lista, o `for...of...` √© suficiente? Se sim, o que poderia ser usado para fazer isso?
----------------------------------------------RESPOSTA----------------------------------------------------------        
for (const [i] of lista.entries()) {
  console.log(i)
}

  3. Qual seria o resultado impresso no console, se o usu√°rio digitasse o n√∫mero `4` ?
    
        const quantidadeTotal = Number(prompt("Digite a quantidade de linhas: "))
        let quantidadeAtual = 0
        while(quantidadeAtual < quantidadeTotal){
          let linha = ""
          for(let asteriscos = 0; asteriscos < quantidadeAtual + 1; asteriscos++){
            linha += "*"
          }
          console.log(linha)
          quantidadeAtual++
        }

----------------------------------------------RESPOSTA----------------------------------------------------------
Ser√° impresso linhas e em cada linhas a quantidade de asteriscos, sendo que o loop final √© a quantidade de linhas pedidas para o usu√°rio digitar.
    
**********************************************Exerc√≠cios de escrita de c√≥digo************************************

  1. Pergunte ao usu√°rio quantos bichinhos de estima√ß√£o ele tem e guarde esse dado em uma vari√°vel. 

----------------------------------------------RESPOSTA----------------------------------------------------------*/
const quantPet = Number(prompt("Quantos bichinhos de estima√ß√£o voc√™ tem?"))
const nomePets = []

/*  a) Se a quantidade for 0, imprima no console "Que pena! Voc√™ pode adotar um pet!"

----------------------------------------------RESPOSTA----------------------------------------------------------*/
    if (quantPet == 0) {
        console.log("Que pena! Voc√™ pode adotar um pet");


/*  b) Se a quantidade for maior que 0, solicite que o usu√°rio digite os nomes deles, um por um, e guarde esses nomes em um array

----------------------------------------------RESPOSTA----------------------------------------------------------*/
    }else{     
        for(let pets = 0; pets <quantPet; pets++) {
          numeroPets = pets + 1
          const name= prompt(`Digite o nome do seu pet n√∫mero ${numeroPets}.`)
          nomePets.push(name)
        }
      } 

/*c) Por fim, imprima o array com os nomes dos bichinhos no console

----------------------------------------------RESPOSTA----------------------------------------------------------*/
     console.log(nomePets);


/*  2. Considere que voc√™ tenha acesso a um `array`  (chamado de 'array original') que √© composto somente de n√∫meros. Baseando-se nisso, crie uma fun√ß√£o para cada um dos itens abaixo, realizando as opera√ß√µes pedidas:
        
        a) Escreva um programa que **imprime** cada um dos valores do array original.
        
        b) Escreva um programa que **imprime** cada um dos valores do array original divididos por 10
        
        c) Escreva um programa que **crie** um novo array contendo, somente, os n√∫meros pares do array original e **imprima** esse novo array
        
        d) Escreva um programa que **crie** um novo array contendo strings, da seguinte forma: "O elemento do √≠ndex `i` √©: `numero`". Depois, **imprima** este novo array.
        
        e) Escreva um programa que imprima no console o maior e o menor n√∫meros contidos no array original
        
        - üí° Dica
            
            Voc√™ deve criar vari√°veis para guardar o `valorMaximo` e o `valorMinimo`. Inicialize a vari√°vel `valorMaximo` com um valor que n√£o seja maior que qualquer valor do array original e a `valorMinimo` com um valor que n√£o seja menor que qualquer valor do array original.
            
        - Exemplo de sa√≠das esperadas
            
            ```jsx
            // Este array ser√° usado para exemplificar as respostas de todos os itens
            const array = [80, 30, 130, 40, 60, 21, 70, 120, 90, 103, 110, 55]
            
            // Resposta item a.
            80
            30
            130
            40
            60
            21
            70
            120
            90
            103
            110
            55
            
            // Resposta item b.
            8
            3 
            13
            4
            6
            2.1
            7 
            12
            9
            10.3
            11 
            5.5
            
            // Resposta item c.
            [80, 30, 130, 40, 60, 70, 120, 90, 110] 
            
            // Resposta item d.
            [ 'O elemento do √≠ndex 0 √© 80',
              'O elemento do √≠ndex 1 √© 30',
              'O elemento do √≠ndex 2 √© 130',
              'O elemento do √≠ndex 3 √© 40',
              'O elemento do √≠ndex 4 √© 60',
              'O elemento do √≠ndex 5 √© 21',
              'O elemento do √≠ndex 6 √© 70',
              'O elemento do √≠ndex 7 √© 120',
              'O elemento do √≠ndex 8 √© 90',
              'O elemento do √≠ndex 9 √© 103',
              'O elemento do √≠ndex 10 √© 110',
              'O elemento do √≠ndex 11 √© 55' ]
            
            // Resposta e.
            "O maior n√∫mero √© 130 e o menor √© 21"
         
*/
const arrayOriginal = [42,51,20,13,26,29,28,16,34]
//valor do array item a
for (valor of arrayOriginal){
  console.log(valor);
}
//dividindo por 10 item b
for (valor of arrayOriginal){
  const divisao = valor / 10
  console.log(divisao);
}
const newArray =[]
for (valor of arrayOriginal){
  if ((valor%2)===0){
    newArray.push(valor)
  }
}
console.log(newArray);

for (let i=0; i < arrayOriginal.length; i++){
  console.log(`O elemento do index ${i} √©: ${arrayOriginal[i]}`);
}


/*
- üèÖ  Desafios
    1. Neste exerc√≠cio voc√™s v√£o implementar uma brincadeira muito simples: "Adivinhe o n√∫mero que estou pensando". Ele deve ser jogado entre duas pessoas. 
        
        Inicialmente, uma das pessoas insere qual o n√∫mero em que ela pensou. A outra pessoa tem que ficar chutando at√© acertar em cheio o n√∫mero. Esta √© uma tarefa dif√≠cil, ent√£o quem escolheu o n√∫mero fica dando umas dicas para a outra pessoa, indicando se o n√∫mero que ela pensou √© maior ou menor do que o chute em si. Veja, abaixo, um exemplo de partida:
        */


        /*
        Vamos jogar!
        O n√∫mero chutado foi: 3
        Errrrrrrrou, √© maior
        O n√∫mero chutado foi: 18
        Errrrrrrrou, √© menor
        O n√∫mero chutado foi: 15
        Errrrrrrrou, √© menor
        O n√∫mero chutado foi: 11
        Acertou!!
        O n√∫mero de tentativas foi: 4 
        
        ```
        
        Um resumo das funcionalidades s√£o:
        
        a) Solicitar que o primeiro jogador escolha um n√∫mero, atrav√©s do `prompt`. Neste momento, deve-se imprimir no console a mensagem `Vamos jogar!`
        
        b) A partir da√≠, ser√° solicitado, ao segundo jogador, que ele chute os n√∫meros at√© acertar, atrav√©s do `prompt`. A cada chute, deve ser informado no console:
        
        - O n√∫mero chutado, com a mensagem: `O n√∫mero chutado foi: <n√∫mero>`
        - Uma mensagem dizendo se o n√∫mero escolhido √© maior ou menor do que o n√∫mero chutado: `Errou. O n√∫mero escolhido √© maior/menor`
        
        c) Quando o segundo jogador acertar o n√∫mero escolhido pelo primeiro jogador, deve ser impressa a mensagem: `Acertou` ; e, embaixo, `O n√∫mero de tentativas foi : <quantos chutes o usu√°rio deu>`
        
        - Observa√ß√£o üëÄ
            
            Voc√™s tem a liberdade para serem 100% criativos quanto √†s mensagens deste exerc√≠cio, mas lembrem-se de cobrir todos os casos pedidos!
*/            
let numeroPrimeirJogador = Number(prompt("Jogador, escolha um n√∫mero")) //Math.floor(100*Math.random() +1)
console.log(`Vamos Jogar`);
let tentativas = 0
let condicao

while (condicao !== numeroPrimeirJogador) {
  condicao = Number(prompt("Qual o seu chute?"))
  console.log(`O n√∫mero chutado foi: ${condicao}`);
  tentativas++

  if (condicao>numeroPrimeirJogador) {
    console.log(`Errrrrrrrou, √© Menor`);
  }else if (condicao < numeroPrimeirJogador) {
    console.log(`Errrrrrrrou, √© Maior`);
  }else {
    console.log(`Acertou!!
    O n√∫mero de tentativas foi: ${tentativas}`);
  }
}

/*
        
    2. Uma das principais caracter√≠sticas de uma boa pessoa programadora √© conseguir resolver seus problemas independentemente. Queremos que voc√™ comece a treinar isso a partir de hoje! Ent√£o, vamos pedir para que voc√™ fa√ßa uma altera√ß√£o no c√≥digo acima. Agora, ao inv√©s de ter 2 jogadores, haver√° um s√≥; e o seu advers√°rio ser√° o computador. A ideia √©: ao iniciar o jogo, voc√™ deve sortear um n√∫mero aleat√≥rio (entre 1 e 100) e o usu√°rio ter√° que ficar chutando o valor at√© acertar. Mantenha as demais funcionalidades e mensagens pedidas no exerc√≠cio anterior.
        
        Quando resolver o exerc√≠cio, pare e fa√ßa a seguinte reflex√£o: foi f√°cil fazer esta altera√ß√£o? O que voc√™ poderia ter feito para que fosse mais f√°cil? **Deixe coment√°rios no seu c√≥digo sobre esta reflex√£o.**
        
        - üí°  Dica
            
            Aqui temos algumas refer√™ncias que explicam como sortear um n√∫mero aleat√≥rio em Javascript
            
            `EN`
            
            [JavaScript random() Method](https://www.w3schools.com/jsref/jsref_random.asp)
            
            `PT`
            
            [Math.random()](https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/random)

            */